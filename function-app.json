{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.20.4.51522",
      "templateHash": "8110460359939194465"
    }
  },
  "parameters": {
    "functionName": {
      "type": "string",
      "metadata": {
        "description": "Name of function app"
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Azure region, Ex: eastus"
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of storage account.  If left blank, one will be autogenerated"
      }
    },
    "azureEnvironment": {
      "type": "string",
      "defaultValue": "AzureCloud",
      "allowedValues": [
        "AzureCloud",
        "AzureUSGovernment"
      ],
      "metadata": {
        "description": "Azure Cloud you are deploying in"
      }
    },
    "gitRepoUrl": {
      "type": "string",
      "defaultValue": "https://github.com/lukearp/Azure-PowerDown-PowerUp.git",
      "metadata": {
        "description": "Public Git repository that has your function app"
      }
    },
    "gitBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Branch of Git repository to deploy"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Resource tags"
      }
    }
  },
  "variables": {
    "suffix": "[if(equals(parameters('azureEnvironment'), 'AzureCloud'), 'blob.core.windows.net', 'blob.core.usgovcloudapi.net')]",
    "sku": {
      "name": "Y1",
      "tier": "Dynamic"
    },
    "storageName": "[if(equals(parameters('storageAccountName'), ''), format('{0}', substring(format('{0}{1}', toLower(replace(parameters('functionName'), '-', '')), toLower(replace(guid(resourceGroup().name, subscription().subscriptionId, parameters('functionName')), '-', ''))), 0, 23)), parameters('storageAccountName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-Plan', parameters('functionName'))]",
      "location": "[parameters('location')]",
      "kind": "app",
      "sku": "[variables('sku')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "perSiteScaling": false,
        "elasticScaleEnabled": false,
        "maximumElasticWorkerCount": 1,
        "isSpot": false,
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0,
        "zoneRedundant": false
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-09-01",
      "name": "[variables('storageName')]",
      "kind": "StorageV2",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "tags": "[parameters('tags')]",
      "properties": {}
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-09-01",
      "name": "[parameters('functionName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "identity": {
        "type": "SystemAssigned"
      },
      "tags": "[parameters('tags')]",
      "properties": {
        "enabled": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('{0}-Plan', parameters('functionName')))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "powershell"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix={2}', variables('storageName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2022-09-01').keys[0].value, variables('suffix'))]"
            }
          ],
          "netFrameworkVersion": "v6.0",
          "powerShellVersion": "7.2",
          "alwaysOn": false,
          "cors": {
            "allowedOrigins": [
              "https://portal.azure.com"
            ]
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', format('{0}-Plan', parameters('functionName')))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/sourcecontrols",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}', parameters('functionName'), 'web')]",
      "properties": {
        "branch": "[parameters('gitBranch')]",
        "repoUrl": "[parameters('gitRepoUrl')]",
        "isGitHubAction": false,
        "isManualIntegration": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('functionName'))]"
      ]
    }
  ]
}